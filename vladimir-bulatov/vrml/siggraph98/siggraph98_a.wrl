#VRML V2.0 utf8

Viewpoint {
    description "1"
   position 0 0 10
}

Viewpoint {
    description "2"
    position 10 2 1 
    orientation -0.10773 0.98939 0.097492 1.4817
}

Viewpoint {
    description "3"
    position 0 1 -10 
    orientation 0 -0.99876 -0.049814 3.1416
}

Viewpoint {
    description "4"
    position -10 2 1 
    orientation -0.10773 -0.98939 -0.097492 1.4817
}

NavigationInfo {
  type "EXAMINE"
  headlight TRUE
}
#DirectionalLight {
#  direction 0.2 -0.3 -1
#}

Background {
    skyColor [
    1 1 1
    ]
}

PROTO Body [
]{
    Appearance {
	material Material {
	    diffuseColor 1 0.3 0.3
	    emissiveColor 0.3 0 0
	}
    }
}

# hinge supposed to be a cylinder || Y axis
# fi[0] - rotation around x
# fi[1] - rotation around z
# fi[2] - rotation cylinder's axis y
PROTO Hinge [

field MFNode children []
field SFVec3f fi 0 0 0
eventIn SFVec3f set_fi 

]{
    DEF TR1 Transform {
	rotation 1 0 0 0 # fi1
	children DEF TR2 Transform {
	    rotation 0 0 1 0 # fi2	    
	    children DEF TR3 Transform {
		rotation 0 1 0 0 # fi3
		children IS children 
	    }
	}
    }
    DEF HINGE Script {
	directOutput TRUE

	field SFVec3f fi IS fi
	eventIn SFVec3f set_fi IS set_fi

	field SFNode tr1 USE TR1
	field SFNode tr2 USE TR2
	field SFNode tr3 USE TR3

	field SFRotation r1 1 0 0 0
	field SFRotation r2 0 0 1 0
	field SFRotation r3 0 1 0 0

	url [
	"javascript:

	function initialize(){
	    r1[3] = fi[0];
	    tr1.set_rotation = r1;

	    r2[3] = fi[1];
	    tr2.set_rotation = r2;

	    r3[3] = fi[2];
	    tr3.set_rotation = r3;
	}

	function set_fi(v, t){
	    r1[3] = v[0];
	    tr1.set_rotation = r1;  
	    r2[3] = v[1];
	    tr2.set_rotation = r2;  
	    r3[3] = v[2];
	    tr3.set_rotation = r3;  
	}
	"
	]

    }
    
}

PROTO Hand [


#                 shoulder , elbow    
field MFVec3f fi [0.15 0 0, -0.3 0 0]
eventIn MFVec3f set_fi 

]{
    DEF SHOULDER Hinge {	    
	children Transform {
	    translation 0 -0.2 0
	    children [
	    Shape {
		geometry Cylinder {
		    height 0.5
		    radius 0.1 
		}
		appearance Body{
		}
	    }

	    Transform {
		translation 0 -0.2 0
		children DEF ELBOW Hinge {

		    children Transform {
			translation 0 -0.25 0
			children [
			Shape {
			    geometry Cylinder {
				height 0.55
				radius 0.07 
			    }
			    appearance Body{
			    }
			}
			]
		    }
		}
	    }
	    ]
	}
    }
    DEF HAND Script {
	directOutput TRUE 
	field MFVec3f fi IS fi
	eventIn MFVec3f set_fi IS set_fi 
	field SFNode shoulder USE SHOULDER 
	field SFNode elbow USE ELBOW 

	url [
	"javascript:

	function initialize(){

	    shoulder.set_fi = fi[0];
	    elbow.set_fi = fi[1];

	}

	function set_fi(v,t){

	    shoulder.set_fi = v[0];
	    elbow.set_fi = v[1];	    

	}
	"
	]
    }
}

PROTO Leg [

#                 pelvis , knee    
field MFVec3f fi [-0.15 0 0, 0.3 0 0]
eventIn MFVec3f set_fi 

]{
    DEF PELVIS Hinge {	    
	children Transform {
	    translation 0 -0.3 0
	    children [
	    Shape {
		geometry Cylinder {
		    height 0.65
		    radius 0.15 
		}
		appearance Body{
		}
	    }
	    Transform {
		translation 0 -0.3 0
		children DEF KNEE Hinge {

		    children Transform {
			translation 0 -0.35 0
			children [
			Shape {
			    geometry Cylinder {
				height 0.75
				radius 0.1 
			    }
			    appearance Body{
			    }
			}
			]
		    }
		}
	    }
	    ]
	}
    }
    DEF LEG Script {
	directOutput TRUE 
	field MFVec3f fi IS fi
	eventIn MFVec3f set_fi IS set_fi 
	field SFNode pelvis USE PELVIS
	field SFNode knee USE KNEE 

	url [
	"javascript:

	function initialize(){

	    pelvis.set_fi = fi[0];
	    knee.set_fi = fi[1];

	}

	function set_fi(v,t){

	    pelvis.set_fi = v[0];
	    knee.set_fi = v[1];	    

	}
	"
	]
    }
}

PROTO Head [

]{
    Hinge {
	children [
	Transform {
	    translation 0 0.15 0
	    children [
	    Shape {
		geometry Sphere {
		    radius 0.15 
		}
		appearance Body {
		}
	    }
	    ]
	}
	]
    }
}


PROTO Man [

field MFVec3f rhand_fi [0.15 0 0 -0.3 0 0]
field MFVec3f lhand_fi [0.15 0 0 -0.3 0 0]
field MFVec3f rleg_fi [-0.15 0 0 0.3 0 0]
field MFVec3f lleg_fi [-0.15 0 0 0.3 0 0]
field SFVec3f chest_fi 0 0 0

eventIn MFVec3f set_rhand_fi 
eventIn MFVec3f set_lhand_fi 
eventIn MFVec3f set_rleg_fi 
eventIn MFVec3f set_lleg_fi 
eventIn SFVec3f set_chest_fi 

]{

    Group {
	children [
	DEF CHEST Hinge { # chest 
	    fi IS chest_fi
	    children [
	    Transform {
		translation 0 0.6 0 
		children Head {
		    
		}
	    }
	    Transform {
		translation 0.3 0.5 0 
		children DEF LHAND Hand {
		    fi IS lhand_fi
		}
	    }
	    Transform {
		translation -0.3 0.5 0 
		children DEF RHAND Hand {
		    fi IS rhand_fi
		}
	    }
	    Transform {
		translation 0 0.1 0
		rotation 1 0 0 3.1415
		scale 1 1 0.5
		children [	    	    
		Shape {
		    geometry Cone {
			bottomRadius 0.35
			height 0.9
		    }
		    appearance Body {
		    }
		}
		]
	    }
	    ]
	}

	Hinge { # hips 
	    children [
	    Transform {
		translation 0.15 -0.3 0 
		children DEF LLEG Leg {
		    fi IS lleg_fi
		}
	    }
	    Transform {
		translation -0.15 -0.3 0 
		children DEF RLEG Leg {
		    fi IS rleg_fi
		}
	    }
	    Transform {
		translation 0 0 0
		scale 1 1 0.6
		children [	    	    
		Shape {
		    geometry Cone {
			bottomRadius 0.3
			height 0.7
		    }
		    appearance Body {
		    }
		}
		]
	    }
	    ]
	    
	}
	]
    }

    DEF MAN Script {

	directOutput TRUE

	eventIn MFVec3f set_rhand_fi IS  set_rhand_fi
	eventIn MFVec3f set_lhand_fi IS  set_lhand_fi
	eventIn MFVec3f set_rleg_fi  IS  set_rleg_fi
	eventIn MFVec3f set_lleg_fi  IS  set_lleg_fi
	eventIn SFVec3f set_chest_fi IS  set_chest_fi

	field SFNode chest USE CHEST
	field SFNode lhand USE LHAND
	field SFNode rhand USE RHAND
	field SFNode rleg USE RLEG
	field SFNode lleg USE LLEG

	url [

	"javascript:

	function initialize(){	    
	}	
	function set_rhand_fi(v,t){
	    rhand.set_fi = v;
	}
	function set_lhand_fi(v,t){
	    lhand.set_fi = v;
	}
	function set_rleg_fi(v,t){
	    rleg.set_fi = v;
	}
	function set_lleg_fi(v,t){
	    lleg.set_fi = v;
	}
	function set_chest_fi(v,t){
	    chest.set_fi = v;
	}

	"
	]
    }
}

DEF TRANS Transform {
    scale 0.6 0.6 0.6

    children DEF MAN Man {
    }
}


Transform {
    scale 8 1 1 
    translation 0 -1 0
    children [
    Shape {
	geometry IndexedFaceSet {
	    solid FALSE
	    coord Coordinate {
		point [
		-1 -1 0 1 -1 0 1 1 0 -1 1 0
		]
	    }
	    coordIndex [
	    0 1 2 3 -1
	    ]
	    texCoord TextureCoordinate {
		point [
		0 0 , 1 0, 1 1 , 0 1
		]
	    }
	    texCoordIndex [
	    0 1 2 3 -1	    
	    ]
	}
	appearance Appearance {
	    material Material {
		diffuseColor 0.5 0.5 0.5
	    }
	    texture ImageTexture {
		url [
		"sg98.gif"
		]
	    }
	}
    }
    ]
    
}


DEF CHEST PositionInterpolator {
    key [0 1 2 3 4 5 6 7 8]
    keyValue [
    0.2 0 0, 
    -0.1 0 0
    -0.3 0 0
    0.3 0 -0.5 
    0.3 0 -0.7 
    -0.2 0 -0.9
    -0.1 0 0
    -0.3 0 -0.8

    0 0 0
]
}
DEF LHAND CoordinateInterpolator {
    key [0 1 2 3 4 5 6 7 8]
    keyValue [
    -1.9  0    0,  -0.3 0 0 
     2.5  0.7 -1,  -0.3 0 0 
    -3.3  0.5  0,   0 0 0 
    -1.8  0    0,  -0.3 0 0 
    -0.15 1.5  0,  -0.5 0 0 
    -0.15 1.5  0,  -0.5 0 0 
    -1.5  0.7 -1,  -0.3 0 0 
    -0.15 1.8 1,   -1 0 0 

    0 0 0 0 0 0
    ]
}
DEF RHAND CoordinateInterpolator {
    key [0 1 2 3 4 5 6 7 8]
    keyValue [
    1    0 0 -0.3 0 0 
    -3   0.5 1 -0.3 0 0 
    2.5 0 0 -0.5 0 0 
    0.7 0 0 -0.3 0 0 
    0.15 -1.5 0 -0.5 0 0 
    0.15 -1.5 0 -0.5 0 0 
    -2 -0.5 1 -0.3 0 0 
    1 0 0 -0.3 0 0 

    0 0 0 0 0 0
    ]
}

DEF POSINT PositionInterpolator {
    key [0 1 2 3 4 5 6 7 8]
    keyValue [
     -8 0 0
     -6 1 0
     -4 2.5 0
     -2 3 0
      0 3 0
      2 2.5 0
      4 1.5 0
      7 1 0

      100 0 0

    ]
}

DEF LLEG CoordinateInterpolator {
    key [0 1 2 3 4 5 6 7 8]
    keyValue [
    0.5 0 0 0.3 0 0 
    -0.8 0 0 1 0 0 
     0.2 0 0 0.3 0 0 
    -0.5 0 0 1.3 0 0 

    -1.4 0 0 1.2 0 0 
    -0.6 0 0 1.7 0 0 

    -0.8 0 0 1 0 0 
     1. 0 0  1 0 0 

    0 0 0 0 0 0
    ]
}

DEF RLEG CoordinateInterpolator {
    key [0 1 2 3 4 5 6 7 8]
    keyValue [
    -1.8 0 0 1.4 0 0 
     0.6 0 0 0.3 0 0 
    -0.5 0 0 0.7 0 0 
    -1.5 0 0 1 0 0 

    -0.4 0 0 1.5 0 0 
    -1.7 0 0 1.2 0 0 

     0.6 0 0 0.3 0 0 
    -0.8 0 0 1 0 0 

    0 0 0 0 0 0
    ]
}

DEF ROTINT OrientationInterpolator {
    key [0 1 2 3 4 5 6 7 8]
    keyValue [    
     -0.148592 0.983173 0.10626  1.91601
     0 1 0 1
     0 1 0 1
     0.577044 0.577503 -0.577503  2.09348
     0.7 0.0 -0.7  3.04147
     -0.577044 0.577503 0.577503  2.09348
     -0.144143 0.953732 0.263851  1.04037
     0 1 0 1.5

     0 1 0 0
    ]
}

DEF TIMER TimeSensor {
    loop TRUE
    enabled TRUE
}

DEF MAIN Script {

    eventIn SFTime set_time 
    eventOut SFFloat fraction_changed 

    field SFTime t0 0
    field SFFloat period 3
    field SFFloat fraction 7

    url[
    "javascript:
    
    function initialize(){
	fraction_changed = 0; 	
    }

    function set_time(v,t){
	if(t0 == 0){
	    t0 = t;
	}
	dt = (t - t0);
	
	//if(dt > 1 && dt < 2){
	//    fraction_changed = 8;
	//}
	
	dt = (t - t0)/(period);
	dt = dt - Math.floor(dt);
	fraction_changed = dt*fraction; 
	
    }
    "
    ]
}

ROUTE TIMER.time TO MAIN.set_time

ROUTE MAIN.fraction_changed TO POSINT.set_fraction
ROUTE POSINT.value_changed TO TRANS.set_translation

ROUTE MAIN.fraction_changed TO ROTINT.set_fraction
ROUTE ROTINT.value_changed TO TRANS.set_rotation

ROUTE MAIN.fraction_changed TO LHAND.set_fraction
ROUTE LHAND.value_changed TO MAN.set_lhand_fi

ROUTE MAIN.fraction_changed TO RHAND.set_fraction
ROUTE RHAND.value_changed TO MAN.set_rhand_fi

ROUTE MAIN.fraction_changed TO CHEST.set_fraction
ROUTE CHEST.value_changed TO MAN.set_chest_fi

ROUTE MAIN.fraction_changed TO LLEG.set_fraction
ROUTE LLEG.value_changed TO MAN.set_lleg_fi

ROUTE MAIN.fraction_changed TO RLEG.set_fraction
ROUTE RLEG.value_changed TO MAN.set_rleg_fi

